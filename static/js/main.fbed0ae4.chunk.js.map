{"version":3,"sources":["MDEditor.js","App.js","registerServiceWorker.js","index.js"],"names":["renderer","marked","Renderer","linkRenderer","link","href","title","text","call","replace","defaultText","MDEditor","props","state","markdown","handleChange","bind","event","this","setState","target","value","mdCode","__html","breaks","className","id","htmlFor","name","onChange","dangerouslySetInnerHTML","getMarkdownHTML","Component","App","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fbed0ae4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport marked from 'marked';\nimport './MDEditor.css';\n\n// modify markedjs's default behaviour\nconst renderer = new marked.Renderer();\nconst linkRenderer = renderer.link;\nrenderer.link = (href, title, text) => {\n    const html = linkRenderer.call(renderer, href, title, text);\n    return html.replace(/^<a /, '<a target=\"_blank\" rel=\"nofollow noopener noreferrer\" ');\n};\n\nconst defaultText = \n`# Using Markdown\nIn the words of its creator John Gruber:\n> Markdown’s syntax is intended for one purpose: to be used as a format for *writing* for the web.\n\nMarkdown allows you to concentrate on your content without being distracted by the HTML syntax.\n<br />\n\n## Basics\n---\n### Headers\nStart a line with one to six \\`#\\` to define a header.\n\n### Styling text\nAdd emphasis to text by wrapping it in asterisks \\`*\\` or underscores \\`_\\`: Use one pair for *italics*, two for **bold**, three for ***both***. You can also **mix _and_ match**.\n\nAny of Markdown's special characters will be treated as normal characters if you escape them with \\`\\\\\\`, e.g. you can write \\\\_italics\\\\_ instead of _italics_.\n\n### Code\nYou can style inline code by wrapping it between backticks \\`\\`\\` like this: \\`const myNumber = 42;\\`\n\nWrap block code between a pair of triple backticks:\n\\`\\`\\`\nlet i = 0;\nwhile (i < 10){\n  console.log(i);\n  i++;\n}\n\\`\\`\\`\n\n### Lists\nYou can write an unordered list with \\`*\\`, \\`-\\` or \\`+\\`:\n- egg\n+ flour\n* tomatoes\n\nYou can write an ordered list with a number followed by a period:\n1. one\n2. two\n3. three\n\n### Quote\nYou can quote a text by preceding it with \\`>\\`:\n> In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a hobbit-hole, and that means comfort.\n― J.R.R. Tolkien, The Hobbit\n\n### Links\nTo include a link, such as [freeCodeCamp](https://www.freecodecamp.org), use the following format:\n\\`[text](url)\\`\n\n### Image\nTo include an image, use the following format:\n\\`![alt text](url)\\`\n\n![Spiral galaxy NGC 4414](https://upload.wikimedia.org/wikipedia/commons/c/c3/NGC_4414_%28NASA-med%29.jpg)\n\n<br />\n\n## Syntax Reference\n---\nYou can find a lot more details about Markdown here:\n\n- [Standard Markdown](https://daringfireball.net/projects/markdown/syntax): by John Gruber, the creator of Markdown.\n\n- [Github Flavored Markdown](https://help.github.com/articles/basic-writing-and-formatting-syntax/) or GFM: an extended version of Markdown specifically for use on Github.\n`;\n\nclass MDEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { markdown: defaultText };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({markdown: event.target.value});\n  }\n\n  getMarkdownHTML(mdCode){\n    return {\n      __html: marked(mdCode, { renderer, breaks: true })\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"MDEditor\">\n        <div className=\"row\">\n          <div className=\"form-group col-12 col-lg-6 d-flex flex-column pt-2 mb-2\" id=\"edit-block\">\n            <div className=\"d-flex justify-content-between align-items-center pb-2\">\n              <label className=\"d-block text-white mb-0\" htmlFor=\"editor\">Edit</label>\n              <a className=\"btn MDEditor-btn d-md-none\" href=\"#preview-block\">Preview</a>\n            </div>\n            <textarea className=\"MDEditor-textarea form-control w-100\" \n              id=\"editor\" name=\"editor\" value={this.state.markdown} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group col-12 col-lg-6 d-flex flex-column pt-2 mb-2\" id=\"preview-block\">\n            <div className=\"d-flex justify-content-between align-items-center pb-2\">\n              <label className=\"d-block text-white mb-0\" htmlFor=\"preview\">Preview</label>\n              <a className=\"btn MDEditor-btn d-md-none\" href=\"#edit-block\">Edit</a>\n            </div>\n            <div className=\"MDEditor-preview text-left p-2 w-100 bg-white rounded\" \n              id=\"preview\" dangerouslySetInnerHTML={this.getMarkdownHTML(this.state.markdown)}>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MDEditor;\n","import React, { Component } from 'react';\nimport MDEditor from './MDEditor';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header p-1\">\n          <div className=\"App-title\">\n            <span className=\"App-title-markdown d-inline-block\">Markdown</span>\n            <span className=\"App-title-previewer d-inline-block align-bottom\">Previewer</span>\n          </div>\n        </header>\n        <main className=\"container pb-4\">\n          <MDEditor></MDEditor>\n        </main>\n        <footer className=\"App-footer py-4\">\n          <div className=\"container\">\n            <div className=\"d-flex flex-wrap justify-content-around pb-4\">\n              <div className=\"text-center text-sm-left p-2\">\n                <div className=\"font-weight-bold\">Markdown Reference</div>\n                <a className=\"d-block text-decoration-none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://daringfireball.net/projects/markdown/syntax\">Markdown Syntax</a>\n                <a className=\"d-block text-decoration-none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://help.github.com/articles/basic-writing-and-formatting-syntax/\">GitHub Flavored Syntax</a>\n              </div>\n              <div className=\"text-center text-sm-left p-2\">\n                <div className=\"font-weight-bold\">About This Project</div>\n                <a className=\"d-block text-decoration-none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://learn.freecodecamp.org/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer\">Specifications</a>\n                <a className=\"d-block text-decoration-none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://github.com/sfiquet/md-preview\">Source Code</a>\n              </div>\n            </div>\n\n            <div className=\"d-flex flex-wrap justify-content-center\">\n              <div className=\"mr-1\">This is a <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://www.freecodecamp.org\">freeCodeCamp</a> project by</div>\n              <div>Sylvie Fiquet</div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}